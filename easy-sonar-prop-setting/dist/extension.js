"use strict";var Y=Object.create;var E=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var T=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),U=(e,t)=>{for(var n in t)E(e,n,{get:t[n],enumerable:!0})},I=(e,t,n,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of R(t))!S.call(e,c)&&c!==n&&E(e,c,{get:()=>t[c],enumerable:!(a=L(t,c))||a.enumerable});return e};var y=(e,t,n)=>(n=e!=null?Y(C(e)):{},I(t||!e||!e.__esModule?E(n,"default",{value:e,enumerable:!0}):n,e)),F=e=>I(E({},"__esModule",{value:!0}),e);var O=T((ie,M)=>{M.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var j=T((le,u)=>{var N=require("fs"),b=require("path"),B=require("os"),q=require("crypto"),W=O(),V=W.version,G=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function J(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let a;for(;(a=G.exec(n))!=null;){let c=a[1],s=a[2]||"";s=s.trim();let r=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),r==='"'&&(s=s.replace(/\\n/g,`
`),s=s.replace(/\\r/g,"\r")),t[c]=s}return t}function Q(e){let t=A(e),n=i.configDotenv({path:t});if(!n.parsed){let r=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw r.code="MISSING_DATA",r}let a=x(e).split(","),c=a.length,s;for(let r=0;r<c;r++)try{let o=a[r].trim(),l=X(n,o);s=i.decrypt(l.ciphertext,l.key);break}catch(o){if(r+1>=c)throw o}return i.parse(s)}function H(e){console.log(`[dotenv@${V}][INFO] ${e}`)}function z(e){console.log(`[dotenv@${V}][WARN] ${e}`)}function _(e){console.log(`[dotenv@${V}][DEBUG] ${e}`)}function x(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function X(e,t){let n;try{n=new URL(t)}catch(o){if(o.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw o}let a=n.password;if(!a){let o=new Error("INVALID_DOTENV_KEY: Missing key part");throw o.code="INVALID_DOTENV_KEY",o}let c=n.searchParams.get("environment");if(!c){let o=new Error("INVALID_DOTENV_KEY: Missing environment part");throw o.code="INVALID_DOTENV_KEY",o}let s=`DOTENV_VAULT_${c.toUpperCase()}`,r=e.parsed[s];if(!r){let o=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw o.code="NOT_FOUND_DOTENV_ENVIRONMENT",o}return{ciphertext:r,key:a}}function A(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let n of e.path)N.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=b.resolve(process.cwd(),".env.vault");return N.existsSync(t)?t:null}function $(e){return e[0]==="~"?b.join(B.homedir(),e.slice(1)):e}function Z(e){H("Loading env from encrypted .env.vault");let t=i._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),i.populate(n,t,e),{parsed:t}}function ee(e){let t=b.resolve(process.cwd(),".env"),n="utf8",a=!!(e&&e.debug);e&&e.encoding?n=e.encoding:a&&_("No encoding is specified. UTF-8 is used by default");let c=[t];if(e&&e.path)if(!Array.isArray(e.path))c=[$(e.path)];else{c=[];for(let l of e.path)c.push($(l))}let s,r={};for(let l of c)try{let p=i.parse(N.readFileSync(l,{encoding:n}));i.populate(r,p,e)}catch(p){a&&_(`Failed to load ${l} ${p.message}`),s=p}let o=process.env;return e&&e.processEnv!=null&&(o=e.processEnv),i.populate(o,r,e),s?{parsed:r,error:s}:{parsed:r}}function te(e){if(x(e).length===0)return i.configDotenv(e);let t=A(e);return t?i._configVault(e):(z(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),i.configDotenv(e))}function ne(e,t){let n=Buffer.from(t.slice(-64),"hex"),a=Buffer.from(e,"base64"),c=a.subarray(0,12),s=a.subarray(-16);a=a.subarray(12,-16);try{let r=q.createDecipheriv("aes-256-gcm",n,c);return r.setAuthTag(s),`${r.update(a)}${r.final()}`}catch(r){let o=r instanceof RangeError,l=r.message==="Invalid key length",p=r.message==="Unsupported state or unable to authenticate data";if(o||l){let f=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw f.code="INVALID_DOTENV_KEY",f}else if(p){let f=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw f.code="DECRYPTION_FAILED",f}else throw r}}function re(e,t,n={}){let a=!!(n&&n.debug),c=!!(n&&n.override);if(typeof t!="object"){let s=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw s.code="OBJECT_REQUIRED",s}for(let s of Object.keys(t))Object.prototype.hasOwnProperty.call(e,s)?(c===!0&&(e[s]=t[s]),a&&_(c===!0?`"${s}" is already defined and WAS overwritten`:`"${s}" is already defined and was NOT overwritten`)):e[s]=t[s]}var i={configDotenv:ee,_configVault:Z,_parseVault:Q,config:te,decrypt:ne,parse:J,populate:re};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i});var ae={};U(ae,{activate:()=>se,deactivate:()=>oe});module.exports=F(ae);var d=y(require("vscode")),h=y(require("fs")),w=y(require("path")),k=y(j());function se(e){console.log('Congratulations, your extension "easy-sonar-prop-setting" is now active!');let t=(r,o,l=!1)=>{let p=d.workspace.workspaceFolders;if(!p){d.window.showErrorMessage("No workspace folder is open");return}let f=p[0].uri.fsPath,D=w.join(f,".env"),P=r.fsPath,m=`./${w.relative(f,P)}`;if(h.existsSync(D)){let v=k.parse(h.readFileSync(D));if(l)v[o]=m;else{let g=v[o]?v[o].split(", "):[];if(!g.includes(m))g.push(m),v[o]=g.join(", ");else{d.window.showErrorMessage(`${m} is already in ${o}`);return}}let K=Object.keys(v).map(g=>`${g}=${v[g]}`).join(`
`);h.writeFileSync(D,K),d.window.showInformationMessage(`${o} set to ${v[o]}`)}else d.window.showErrorMessage(".env file not found in the root path")},n=d.commands.registerCommand("easy-sonar-prop-setting.addSonarPath",r=>{t(r,"sonar.path")}),a=d.commands.registerCommand("easy-sonar-prop-setting.addTestInclusion",r=>{t(r,"test.inclusion")}),c=d.commands.registerCommand("easy-sonar-prop-setting.addTestExclusion",r=>{t(r,"test.exclusion")}),s=d.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarPath",r=>{t(r,"sonar.path",!0)});e.subscriptions.push(n,a,c,s)}function oe(){}0&&(module.exports={activate,deactivate});
