"use strict";var F=Object.create;var E=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var O=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),B=(e,t)=>{for(var n in t)E(e,n,{get:t[n],enumerable:!0})},A=(e,t,n,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of U(t))!M.call(e,i)&&i!==n&&E(e,i,{get:()=>t[i],enumerable:!(c=L(t,i))||c.enumerable});return e};var w=(e,t,n)=>(n=e!=null?F(R(e)):{},A(t||!e||!e.__esModule?E(n,"default",{value:e,enumerable:!0}):n,e)),q=e=>A(E({},"__esModule",{value:!0}),e);var C=O((pe,W)=>{W.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var $=O((ge,g)=>{var N=require("fs"),I=require("path"),G=require("os"),J=require("crypto"),Q=C(),T=Q.version,H=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function z(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let c;for(;(c=H.exec(n))!=null;){let i=c[1],o=c[2]||"";o=o.trim();let s=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),s==='"'&&(o=o.replace(/\\n/g,`
`),o=o.replace(/\\r/g,"\r")),t[i]=o}return t}function X(e){let t=S(e),n=p.configDotenv({path:t});if(!n.parsed){let s=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw s.code="MISSING_DATA",s}let c=P(e).split(","),i=c.length,o;for(let s=0;s<i;s++)try{let l=c[s].trim(),r=te(n,l);o=p.decrypt(r.ciphertext,r.key);break}catch(l){if(s+1>=i)throw l}return p.parse(o)}function Z(e){console.log(`[dotenv@${T}][INFO] ${e}`)}function ee(e){console.log(`[dotenv@${T}][WARN] ${e}`)}function b(e){console.log(`[dotenv@${T}][DEBUG] ${e}`)}function P(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function te(e,t){let n;try{n=new URL(t)}catch(l){if(l.code==="ERR_INVALID_URL"){let r=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw r.code="INVALID_DOTENV_KEY",r}throw l}let c=n.password;if(!c){let l=new Error("INVALID_DOTENV_KEY: Missing key part");throw l.code="INVALID_DOTENV_KEY",l}let i=n.searchParams.get("environment");if(!i){let l=new Error("INVALID_DOTENV_KEY: Missing environment part");throw l.code="INVALID_DOTENV_KEY",l}let o=`DOTENV_VAULT_${i.toUpperCase()}`,s=e.parsed[o];if(!s){let l=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw l.code="NOT_FOUND_DOTENV_ENVIRONMENT",l}return{ciphertext:s,key:c}}function S(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let n of e.path)N.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=I.resolve(process.cwd(),".env.vault");return N.existsSync(t)?t:null}function K(e){return e[0]==="~"?I.join(G.homedir(),e.slice(1)):e}function ne(e){Z("Loading env from encrypted .env.vault");let t=p._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),p.populate(n,t,e),{parsed:t}}function oe(e){let t=I.resolve(process.cwd(),".env"),n="utf8",c=!!(e&&e.debug);e&&e.encoding?n=e.encoding:c&&b("No encoding is specified. UTF-8 is used by default");let i=[t];if(e&&e.path)if(!Array.isArray(e.path))i=[K(e.path)];else{i=[];for(let r of e.path)i.push(K(r))}let o,s={};for(let r of i)try{let a=p.parse(N.readFileSync(r,{encoding:n}));p.populate(s,a,e)}catch(a){c&&b(`Failed to load ${r} ${a.message}`),o=a}let l=process.env;return e&&e.processEnv!=null&&(l=e.processEnv),p.populate(l,s,e),o?{parsed:s,error:o}:{parsed:s}}function se(e){if(P(e).length===0)return p.configDotenv(e);let t=S(e);return t?p._configVault(e):(ee(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),p.configDotenv(e))}function re(e,t){let n=Buffer.from(t.slice(-64),"hex"),c=Buffer.from(e,"base64"),i=c.subarray(0,12),o=c.subarray(-16);c=c.subarray(12,-16);try{let s=J.createDecipheriv("aes-256-gcm",n,i);return s.setAuthTag(o),`${s.update(c)}${s.final()}`}catch(s){let l=s instanceof RangeError,r=s.message==="Invalid key length",a=s.message==="Unsupported state or unable to authenticate data";if(l||r){let u=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw u.code="INVALID_DOTENV_KEY",u}else if(a){let u=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw u.code="DECRYPTION_FAILED",u}else throw s}}function ae(e,t,n={}){let c=!!(n&&n.debug),i=!!(n&&n.override);if(typeof t!="object"){let o=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw o.code="OBJECT_REQUIRED",o}for(let o of Object.keys(t))Object.prototype.hasOwnProperty.call(e,o)?(i===!0&&(e[o]=t[o]),c&&b(i===!0?`"${o}" is already defined and WAS overwritten`:`"${o}" is already defined and was NOT overwritten`)):e[o]=t[o]}var p={configDotenv:oe,_configVault:ne,_parseVault:X,config:se,decrypt:re,parse:z,populate:ae};g.exports.configDotenv=p.configDotenv;g.exports._configVault=p._configVault;g.exports._parseVault=p._parseVault;g.exports.config=p.config;g.exports.decrypt=p.decrypt;g.exports.parse=p.parse;g.exports.populate=p.populate;g.exports=p});var le={};B(le,{activate:()=>ce,deactivate:()=>ie});module.exports=q(le);var d=w(require("vscode")),m=w(require("fs")),_=w(require("path")),k=w($());function ce(e){console.log('Congratulations, your extension "easy-sonar-prop-setting" is now active!');let t=(r,a,u=!1)=>{let f=d.workspace.workspaceFolders;if(!f){d.window.showErrorMessage("No workspace folder is open");return}let V=f[0].uri.fsPath,x=d.workspace.getConfiguration("easySonarPropSetting").get("envFileName",".env"),D=_.join(V,x),j=r.fsPath,y=`./${_.relative(V,j)}`;if(m.existsSync(D)){let v=k.parse(m.readFileSync(D));if(u)v[a]=y;else{let h=v[a]?v[a].split(", "):[];if(!h.includes(y))h.push(y),v[a]=h.join(", ");else{d.window.showErrorMessage(`${y} is already in ${a}`);return}}let Y=Object.keys(v).map(h=>`${h}=${v[h]}`).join(`
`);m.writeFileSync(D,Y),d.window.showInformationMessage(`${a} set to ${v[a]}`)}else d.window.showErrorMessage(`${x} file not found in the root path`)},n=d.commands.registerCommand("easy-sonar-prop-setting.addSonarPath",r=>{let u=d.workspace.getConfiguration("easySonarPropSetting").get("sonarPathKey","sonar.path");t(r,u)}),c=d.commands.registerCommand("easy-sonar-prop-setting.addTestInclusion",r=>{let u=d.workspace.getConfiguration("easySonarPropSetting").get("testInclusionKey","test.inclusion");t(r,u)}),i=d.commands.registerCommand("easy-sonar-prop-setting.addTestExclusion",r=>{let u=d.workspace.getConfiguration("easySonarPropSetting").get("testExclusionKey","test.exclusion");t(r,u)}),o=d.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarPath",r=>{let a=d.workspace.getConfiguration("easySonarPropSetting"),u=a.get("sonarPathKey","sonar.path"),f=a.get("enableClearFunction",!0);t(r,u,f)}),s=d.commands.registerCommand("easy-sonar-prop-setting.clearAndAddTestInclusion",r=>{let a=d.workspace.getConfiguration("easySonarPropSetting"),u=a.get("testInclusionKey","test.inclusion"),f=a.get("enableClearTestInclusion",!1);t(r,u,f)}),l=d.commands.registerCommand("easy-sonar-prop-setting.clearAndAddTestExclusion",r=>{let a=d.workspace.getConfiguration("easySonarPropSetting"),u=a.get("testExclusionKey","test.exclusion"),f=a.get("enableClearTestExclusion",!1);t(r,u,f)});e.subscriptions.push(n,c,i,o,s,l)}function ie(){}0&&(module.exports={activate,deactivate});
