"use strict";var q=Object.create;var b=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var K=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),H=(e,n)=>{for(var o in n)b(e,o,{get:n[o],enumerable:!0})},O=(e,n,o,a)=>{if(n&&typeof n=="object"||typeof n=="function")for(let c of G(n))!Q.call(e,c)&&c!==o&&b(e,c,{get:()=>n[c],enumerable:!(a=W(n,c))||a.enumerable});return e};var A=(e,n,o)=>(o=e!=null?q(J(e)):{},O(n||!e||!e.__esModule?b(o,"default",{value:e,enumerable:!0}):o,e)),z=e=>O(b({},"__esModule",{value:!0}),e);var $=K((ye,X)=>{X.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var U=K((Se,v)=>{var N=require("fs"),I=require("path"),Z=require("os"),ee=require("crypto"),ne=$(),C=ne.version,oe=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function se(e){let n={},o=e.toString();o=o.replace(/\r\n?/mg,`
`);let a;for(;(a=oe.exec(o))!=null;){let c=a[1],s=a[2]||"";s=s.trim();let r=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),r==='"'&&(s=s.replace(/\\n/g,`
`),s=s.replace(/\\r/g,"\r")),n[c]=s}return n}function te(e){let n=R(e),o=p.configDotenv({path:n});if(!o.parsed){let r=new Error(`MISSING_DATA: Cannot parse ${n} for an unknown reason`);throw r.code="MISSING_DATA",r}let a=j(e).split(","),c=a.length,s;for(let r=0;r<c;r++)try{let l=a[r].trim(),g=ce(o,l);s=p.decrypt(g.ciphertext,g.key);break}catch(l){if(r+1>=c)throw l}return p.parse(s)}function re(e){console.log(`[dotenv@${C}][INFO] ${e}`)}function ae(e){console.log(`[dotenv@${C}][WARN] ${e}`)}function T(e){console.log(`[dotenv@${C}][DEBUG] ${e}`)}function j(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function ce(e,n){let o;try{o=new URL(n)}catch(l){if(l.code==="ERR_INVALID_URL"){let g=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw g.code="INVALID_DOTENV_KEY",g}throw l}let a=o.password;if(!a){let l=new Error("INVALID_DOTENV_KEY: Missing key part");throw l.code="INVALID_DOTENV_KEY",l}let c=o.searchParams.get("environment");if(!c){let l=new Error("INVALID_DOTENV_KEY: Missing environment part");throw l.code="INVALID_DOTENV_KEY",l}let s=`DOTENV_VAULT_${c.toUpperCase()}`,r=e.parsed[s];if(!r){let l=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw l.code="NOT_FOUND_DOTENV_ENVIRONMENT",l}return{ciphertext:r,key:a}}function R(e){let n=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let o of e.path)N.existsSync(o)&&(n=o.endsWith(".vault")?o:`${o}.vault`);else n=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else n=I.resolve(process.cwd(),".env.vault");return N.existsSync(n)?n:null}function P(e){return e[0]==="~"?I.join(Z.homedir(),e.slice(1)):e}function ie(e){re("Loading env from encrypted .env.vault");let n=p._parseVault(e),o=process.env;return e&&e.processEnv!=null&&(o=e.processEnv),p.populate(o,n,e),{parsed:n}}function de(e){let n=I.resolve(process.cwd(),".env"),o="utf8",a=!!(e&&e.debug);e&&e.encoding?o=e.encoding:a&&T("No encoding is specified. UTF-8 is used by default");let c=[n];if(e&&e.path)if(!Array.isArray(e.path))c=[P(e.path)];else{c=[];for(let g of e.path)c.push(P(g))}let s,r={};for(let g of c)try{let m=p.parse(N.readFileSync(g,{encoding:o}));p.populate(r,m,e)}catch(m){a&&T(`Failed to load ${g} ${m.message}`),s=m}let l=process.env;return e&&e.processEnv!=null&&(l=e.processEnv),p.populate(l,r,e),s?{parsed:r,error:s}:{parsed:r}}function le(e){if(j(e).length===0)return p.configDotenv(e);let n=R(e);return n?p._configVault(e):(ae(`You set DOTENV_KEY but you are missing a .env.vault file at ${n}. Did you forget to build it?`),p.configDotenv(e))}function ue(e,n){let o=Buffer.from(n.slice(-64),"hex"),a=Buffer.from(e,"base64"),c=a.subarray(0,12),s=a.subarray(-16);a=a.subarray(12,-16);try{let r=ee.createDecipheriv("aes-256-gcm",o,c);return r.setAuthTag(s),`${r.update(a)}${r.final()}`}catch(r){let l=r instanceof RangeError,g=r.message==="Invalid key length",m=r.message==="Unsupported state or unable to authenticate data";if(l||g){let h=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw h.code="INVALID_DOTENV_KEY",h}else if(m){let h=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw h.code="DECRYPTION_FAILED",h}else throw r}}function pe(e,n,o={}){let a=!!(o&&o.debug),c=!!(o&&o.override);if(typeof n!="object"){let s=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw s.code="OBJECT_REQUIRED",s}for(let s of Object.keys(n))Object.prototype.hasOwnProperty.call(e,s)?(c===!0&&(e[s]=n[s]),a&&T(c===!0?`"${s}" is already defined and WAS overwritten`:`"${s}" is already defined and was NOT overwritten`)):e[s]=n[s]}var p={configDotenv:de,_configVault:ie,_parseVault:te,config:le,decrypt:ue,parse:se,populate:pe};v.exports.configDotenv=p.configDotenv;v.exports._configVault=p._configVault;v.exports._parseVault=p._parseVault;v.exports.config=p.config;v.exports.decrypt=p.decrypt;v.exports.parse=p.parse;v.exports.populate=p.populate;v.exports=p});var ve={};H(ve,{activate:()=>ge,deactivate:()=>fe});module.exports=z(ve);var t=A(require("vscode")),E=A(require("fs")),_=A(require("path")),L=A(U());function ge(e){console.log('Congratulations, your extension "easy-sonar-prop-setting" is now active!');let n=(i,d,u=!1)=>{let f=t.workspace.workspaceFolders;if(!f){t.window.showErrorMessage("No workspace folder is open");return}let V=f[0].uri.fsPath,k=t.workspace.getConfiguration("easySonarPropSetting").get("propertiesFileName","sonar-project.properties"),D=_.join(V,k),B=i.fsPath,w=`./${_.relative(V,B)}`;if(E.existsSync(D)){let y=L.parse(E.readFileSync(D));if(u)y[d]=w;else{let S=y[d]?y[d].split(", "):[];if(!S.includes(w))S.push(w),y[d]=S.join(", ");else{t.window.showErrorMessage(`${w} is already in ${d}`);return}}let M=Object.keys(y).map(S=>`${S}=${y[S]}`).join(`
`);E.writeFileSync(D,M),t.window.showInformationMessage(`${d} set to ${y[d]}`)}else t.window.showErrorMessage(`${k} file not found in the root path`)},o=t.commands.registerCommand("easy-sonar-prop-setting.addSonarSources",i=>{let u=t.workspace.getConfiguration("easySonarPropSetting").get("sonarSourcesKey","sonar.sources");n(i,u)}),a=t.commands.registerCommand("easy-sonar-prop-setting.addSonarTests",i=>{let u=t.workspace.getConfiguration("easySonarPropSetting").get("sonarTestsKey","sonar.tests");n(i,u)}),c=t.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarSources",i=>{let d=t.workspace.getConfiguration("easySonarPropSetting"),u=d.get("sonarSourcesKey","sonar.sources"),f=d.get("enableClearAndAddSonarSources",!0);n(i,u,f)}),s=t.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarTests",i=>{let d=t.workspace.getConfiguration("easySonarPropSetting"),u=d.get("sonarTestsKey","sonar.tests"),f=d.get("enableClearAndAddSonarTests",!0);n(i,u,f)}),r=t.commands.registerCommand("easy-sonar-prop-setting.addSonarTestInclusions",i=>{let u=t.workspace.getConfiguration("easySonarPropSetting").get("sonarTestInclusionsKey","sonar.test.inclusions");n(i,u)}),l=t.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarTestInclusions",i=>{let d=t.workspace.getConfiguration("easySonarPropSetting"),u=d.get("sonarTestInclusionsKey","sonar.test.inclusions"),f=d.get("enableClearAndAddSonarTestInclusions",!0);n(i,u,f)}),g=t.commands.registerCommand("easy-sonar-prop-setting.addSonarExclusions",i=>{let u=t.workspace.getConfiguration("easySonarPropSetting").get("sonarExclusionsKey","sonar.exclusions");n(i,u)}),m=t.commands.registerCommand("easy-sonar-prop-setting.clearAndAddSonarExclusions",i=>{let d=t.workspace.getConfiguration("easySonarPropSetting"),u=d.get("sonarExclusionsKey","sonar.exclusions"),f=d.get("enableClearAndAddSonarExclusions",!1);n(i,u,f)}),h=t.commands.registerCommand("easy-sonar-prop-setting.runSonarScanner",()=>{let i=t.workspace.workspaceFolders;if(!i){t.window.showErrorMessage("No workspace folder is open");return}let d=i[0].uri.fsPath,u=t.window.createTerminal("Sonar Scanner");u.show(),u.sendText(`cd ${d}`),u.sendText("sonar-scanner")});e.subscriptions.push(o,a,c,s,r,l,g,m,h);let x=t.workspace.getConfiguration("easySonarPropSetting"),Y=x.get("showRunSonarScannerButton",!0),F=x.get("runSonarScannerButtonText","$(play) Run Sonar Scanner");if(Y){let i=t.window.createStatusBarItem(t.StatusBarAlignment.Left,100);i.text=F,i.command="easy-sonar-prop-setting.runSonarScanner",i.show(),e.subscriptions.push(i)}}function fe(){}0&&(module.exports={activate,deactivate});
